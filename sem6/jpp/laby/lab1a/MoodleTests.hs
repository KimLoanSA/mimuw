[1, 2, 3] ++ [4, 5, 6] == [1,2,3,4,5,6]

head [1, 2, 4] == 1
tail [1, 2, 4] == [2, 4]
--head [] --exception
--tail [] --exception

take 5 "Hello World!" == "Hello"
take 3 [1,2,3,4,5] == [1,2,3]
take 3 [1,2] == [1,2]
take 3 [] == []
take (-1) [1,2] == []
take 0 [1,2] == []

drop 6 "Hello World!" == "World!"
drop 3 [1,2,3,4,5] == [4,5]
drop 3 [1,2] == []
drop 3 [] == []
drop (-1) [1,2] == [1,2]
drop 0 [1,2] == [1,2]

map (+1) [1, 2, 3] == [2,3,4]
filter (==7) [7, 2, 4, 7] == [7,7]
filter (\x -> x `mod` 2 == 0) [7, 2, 4, 7] == [2,4]

inits [] == [[]]
inits [1, 2, 3, 4] == [[],[1],[1,2],[1,2,3],[1,2,3,4]]

tails [1, 2, 3, 4, 5] == [[1,2,3,4,5],[2,3,4,5],[3,4,5],[4,5],[5],[]]

partitions [1, 2, 3, 4] == [([],[1,2,3,4]), ([1],[2,3,4]), ([1,2],[3,4]), ([1,2,3],[4]), ([1,2,3,4],[])]
partitions [] == [([], [])]

permutations [1, 2, 3] `elem` permutations [[1,2,3],[2,1,3],[2,3,1],[1,3,2],[3,1,2],[3,2,1]]

nub [1,2,1,3,1,2,1,4] == [1,2,3,4]
